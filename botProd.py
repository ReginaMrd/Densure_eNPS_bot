import telebot
import csv
from chart_utils import build_pie_chart


# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather –≤ Telegram
TOKEN = ''

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_answers = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
comments = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è eNPS
def calculate_nps():
    promoters = 0
    passives = 0
    detractors = 0

    for user_id, answers in user_answers.items():
        # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        last_answer = answers[-1]

        if last_answer >= 9:
            promoters += 1
        elif last_answer >= 7:
            passives += 1
        else:
            detractors += 1

    total_responses = promoters + passives + detractors

    if total_responses == 0:
        return 0

    promoters_percent = (promoters / total_responses) * 100
    detractors_percent = (detractors / total_responses) * 100
    return promoters_percent - detractors_percent

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10')
            
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Çüòä\n–ö–∞–∫ —Ç—ã —É–∂–µ –∑–Ω–∞–µ—à—å, –º—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.", reply_markup=markup)
    bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—ë–Ω —Ä–∞–±–æ—Ç–æ–π –≤ Densure –∏ —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å. –û–ø—Ä–æ—Å —è–≤–ª—è–µ—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º, –∏ –º—ã –±—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ —á–µ—Å—Ç–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –ü—Ä–æ—Å–∏–º –æ—Ç–≤–µ—Ç–∏—Ç—å –≤—Å–µ–≥–æ –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å:", reply_markup=markup)
    bot.send_message(message.chat.id, "<b>–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤–µ—Ä–æ—è—Ç–Ω–æ, —á—Ç–æ —Ç—ã –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å —Ä–∞–±–æ—Ç—É –≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º –∏–ª–∏ –∑–Ω–∞–∫–æ–º—ã–º?</b> <i>(–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å —á–∏—Å–ª–æ–º –æ—Ç 0 –¥–æ 10.)</i>", reply_markup=markup, parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
@bot.message_handler(func=lambda message: message.text.isdigit() and 0 <= int(message.text) <= 10)
def process_answer(message):
    user_id = message.from_user.id
    score = int(message.text)

    if user_id not in user_answers:
        user_answers[user_id] = []

    user_answers[user_id].append(score)


    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã –≤ —Ñ–∞–π–ª CSV
    with open('responses.csv', mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([user_id, score])
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∏–∫–µ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ü–µ–Ω–∫–∏
    if score == 0:
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAED2nxl41gJLcMRYRbykOIK9PStCr3JswACvwQAAiBtOwAB_cxvpUFJxfg0BA')
    elif 1 <= score <= 5:
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAED2n5l41hY3M5X5ZCxpfK3vq-xTAM0DAACwQQAAiBtOwABJt1yAAGdcgQ6NAQ')
    elif 6 <= score <= 8:
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAED2oBl41hx-jt57ujws9WoLw_x1aigEgAC0gQAAiBtOwABGpQPENnnAYs0BA')
    elif 9 <= score <= 10:
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAED2oJl41iWYSY0lNtxe18LUcGQoDN2pAACvQQAAiBtOwABu5XYnmuPHNo0BA')


    # –ï—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ –º–µ–Ω—å—à–µ 7, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    if score < 7:
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! –ú—ã —Ü–µ–Ω–∏–º —Ç–≤–æ—é —á–µ—Å—Ç–Ω–æ—Å—Ç—å.")
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ –±—ã —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å —É–ª—É—á—à–∏—Ç—å?")
        bot.register_next_step_handler(message, ask_comment)
    else:
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! –ú—ã —Ü–µ–Ω–∏–º —Ç–≤–æ—é –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚ù§Ô∏è")
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
def ask_comment(message):
    user_id = message.from_user.id
    comment = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    if user_id not in comments:
        comments[user_id] = []

    comments[user_id].append(comment)
    bot.send_message(message.chat.id, "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ—Ç–≤–µ—Ç! –ü–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã —Ç–≤–æ—ë —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å Densure —Å—Ç–∞–ª–æ –µ—â—ë –±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º ‚ù§Ô∏è")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /allcom –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
@bot.message_handler(commands=['allcom'])
def show_all_comments(message):
    all_comments = []
    for user_comments in comments.values():
        all_comments.extend(user_comments)

    if all_comments:
        bot.send_message(message.chat.id, "\n".join(all_comments))
    else:
        bot.send_message(message.chat.id, "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /enps –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ eNPS
@bot.message_handler(commands=['enps'])
def show_nps(message):
    nps = calculate_nps()
    unique_responses = len(user_answers)
    bot.send_message(message.chat.id, f"–¢–µ–∫—É—â–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å eNPS: {nps:.2f}\n–í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {unique_responses}")
    
        
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–æ—É—Ç–µ—Ä–æ–≤, –ø–∞—Å—Å–∏–≤–æ–≤ –∏ –¥–µ—Ç—Ä–∞–∫—Ç–æ—Ä–æ–≤
    promoters = sum(1 for answer in user_answers.values() if answer[-1] >= 9)
    passives = sum(1 for answer in user_answers.values() if 7 <= answer[-1] < 9)
    detractors = sum(1 for answer in user_answers.values() if answer[-1] < 7)
    
    # –í—ã–≤–æ–¥–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ –ø—Ä–æ–º–æ—É—Ç–µ—Ä–æ–≤, –ø–∞—Å—Å–∏–≤–æ–≤ –∏ –¥–µ—Ç—Ä–∞–∫—Ç–æ—Ä–æ–≤
    bot.send_message(message.chat.id, f"–ü—Ä–æ–º–æ—É—Ç–µ—Ä–æ–≤: {promoters}")
    bot.send_message(message.chat.id, f"–ü–∞—Å—Å–∏–≤–æ–≤: {passives}")
    bot.send_message(message.chat.id, f"–î–µ—Ç—Ä–∞–∫—Ç–æ—Ä–æ–≤: {detractors}")
    

    # –°—Ç—Ä–æ–∏–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    build_pie_chart(promoters, passives, detractors)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º–æ–π
    with open('pie_chart.png', 'rb') as chart:
        bot.send_photo(message.chat.id, chart)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
@bot.message_handler(commands=['reset'])
def reset_answers(message):
    global user_answers
    global comments

    user_answers.clear()
    comments.clear()
    
    bot.send_message(message.chat.id, "–í—Å–µ —Å—Ç–∞—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()